{
  "keyboard_shortcut": "", 
  "name": "Init", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "var sanitize_name = function(s) {", 
    "    return s.replace(/[\\s\\.]*/g, '').toLowerCase();", 
    "}", 
    "", 
    "var os = Components.classes['@activestate.com/koOs;1'].", 
    "    getService(Components.interfaces.koIOs);", 
    "", 
    "var project_root = ko.filepicker.getFolder(os.getcwd(), \"Choose a directory to creat eyou rnew project in.\");", 
    "", 
    "// var project_root = '/Users/jeff/code/moz/jetpack/tmp/two';", 
    "", 
    "var name = ko.dialogs.prompt('Addon name', 'Jetpack!!');", 
    "", 
    "var safe_name = sanitize_name(name);", 
    "", 
    "var dir = os.path.join(project_root, safe_name);", 
    "", 
    "var uri = ko.uriparse.localPathToURI(dir);", 
    "", 
    "function jetpack_init(dir) {", 
    "    try {", 
    "        os.mkdir(dir);", 
    "        ", 
    "        // should be in extension prefs", 
    "        var cmd = '/Users/jeff/code/moz/jetpack/addon-sdk/bin/cfx -b /Applications/Coms/Firefox4.app init';", 
    "        ", 
    "        cmd += \" {'cwd': u'\"+ dir +\"'}\";", 
    "        ", 
    "        ko.run.runEncodedCommand(window, cmd, function() {", 
    "            ko.statusBar.AddMessage('Build complete', 'projects', 5000, true);", 
    "            ko.projects.manager.saveProject(project);", 
    "        });", 
    "    }", 
    "    catch(e) {", 
    "        console.log(e);", 
    "    }", 
    "}", 
    "", 
    "jetpack_init(dir);", 
    "", 
    "//var project = Components.classes[\"@activestate.com/koProject;1\"]", 
    "//                                         .createInstance(Components.interfaces.koIProject);", 
    "//project.create();", 
    "//project.url = url;", 
    "//", 
    "//", 
    "//try {", 
    "//    project.save();", 
    "//} catch(ex) {", 
    "//    var lastErrorSvc = Components.classes[\"@activestate.com/koLastErrorService;1\"].", 
    "//        getService(Components.interfaces.koILastErrorService);", 
    "//    ko.dialogs.alert(_bundle.formatStringFromName(\"thereWasAnErrorSavingProject.alert\",", 
    "//        [project.name, lastErrorSvc.getLastErrorMessage()], 2));", 
    "//    return false;", 
    "//}", 
    "//", 
    "//xtk.domutils.fireEvent(window, 'project_opened');", 
    "////try {", 
    "////    _obSvc.notifyObservers(this, 'file_project', project.url);", 
    "////} catch(e) {", 
    "////    /* exception if no listeners */", 
    "////}", 
    "//", 
    "//", 
    "//", 
    ""
  ], 
  "trigger": "trigger_postopen", 
  "rank": 100, 
  "version": "1.0.7", 
  "async": false, 
  "type": "macro"
}